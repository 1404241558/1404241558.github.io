<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端开发</title>
  
  <subtitle>不负春光 野蛮生长</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bilent.top/"/>
  <updated>2019-11-27T08:07:02.198Z</updated>
  <id>http://bilent.top/</id>
  
  <author>
    <name>笨猪先飞</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019 推荐几款男女通吃老少皆宜的VSCode 主题</title>
    <link href="http://bilent.top/posts/c236e71b.html"/>
    <id>http://bilent.top/posts/c236e71b.html</id>
    <published>2019-11-27T02:15:00.000Z</published>
    <updated>2019-11-27T08:07:02.198Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Nov 27 2019 16:07:37 GMT+0800 (GMT+08:00) --><p><strong>我是做前端开发的，可能在视觉方面喜欢折腾，所以我总是在网上找好看的主题，但是自己又不想去完完整整的开发一个视觉主题，所以就决定总结归纳一下现在收集的样式主题。</strong></p><h3 id="选取标准"><a href="#选取标准" class="headerlink" title="选取标准"></a>选取标准</h3><p>随着安装的主题不断的变多，我也摸索出来了我的一套选择主题标准</p><ol><li>对于长久的进行敲代码，眼睛不会变得很累（相对来说）<br>这个相对于黑白两大色系来说，总的来说白色的主题看的时间长了，眼睛会比较难受，这是我的感受，暗色系的主题就稍微缓和的时间比较长一些</li><li>左侧列表栏目是否清晰<br>很多的主题都没有考虑这个问题，左侧的颜色太鲜亮导致项目以及相关文件名称看不清楚，特别在长时间工作，这样还要特意的去找，就会感觉很累</li><li>最左侧的模块切换图标<br>也是同样的问题就是看不清楚</li><li>主编辑区的代码样式<ol><li>关键词代码的颜色搭配是否友好，这东西就是一眼看上去，到底舒服还是不舒服，这是很主观的反应</li><li>常规代码区分是否明显，其实这个很重要，常规代码其实在原有主题上面能够清晰阅读就足够，不需要太突出，太标新立异，这样看起来就很难受</li><li>使用搜索关键词进行搜索的时候，是否能够清晰的看见自己搜索的关键词代码，但是很多的主题都是忽略了这个问题，在有很长的代码的时候，搜索功能就变得很重要</li><li>主编辑区上方的标签卡是否能够清晰的提示，因为在比较大的项目中，可能会开很多个选项卡，如果标签卡不能够清晰的分辨出来，工作时间长了就会很累</li></ol></li></ol><p>我感觉这些方面都做的很好，然后页面内部的颜色搭配也比较舒服，那就是一个优秀的主题</p><h3 id="推荐几款主题"><a href="#推荐几款主题" class="headerlink" title="推荐几款主题"></a>推荐几款主题</h3><h4 id="1-Material-Theme"><a href="#1-Material-Theme" class="headerlink" title="1. Material Theme"></a>1. Material Theme</h4><p><img src="http://qiniu.bilent.top/blog-20191127154118.png" alt="Material Theme 默认"></p><h2><a href="#" class="headerlink"></a> <img src="http://qiniu.bilent.top/blog-20191127154148.png" alt="Material Theme Dark"></h2><h4 id="2-Atom-One-Theme"><a href="#2-Atom-One-Theme" class="headerlink" title="2. Atom One Theme"></a>2. Atom One Theme</h4><p><img src="http://qiniu.bilent.top/blog-20191127154714.png" alt="Atom One Light"></p><h2 id="-1"><a href="#-1" class="headerlink"></a> <img src="http://qiniu.bilent.top/blog-20191127154741.png" alt="Atom One Dark"></h2><h4 id="3-Solarized-Theme"><a href="#3-Solarized-Theme" class="headerlink" title="3. Solarized Theme"></a>3. Solarized Theme</h4><p><img src="http://qiniu.bilent.top/blog-20191127154828.png" alt="Solarized Light"></p><h2 id="-2"><a href="#-2" class="headerlink"></a> <img src="http://qiniu.bilent.top/blog-20191127154927.png" alt="Solarized Dark"></h2><h4 id="4-Horizon-Theme"><a href="#4-Horizon-Theme" class="headerlink" title="4. Horizon Theme"></a>4. Horizon Theme</h4><p><img src="http://qiniu.bilent.top/blog-20191127155138.png" alt="Horizon Bright"></p><h2 id="-3"><a href="#-3" class="headerlink"></a> <img src="http://qiniu.bilent.top/blog-20191127155212.png" alt="Horizon Dark"></h2><p>其实主题这个东西有几个系列就够了，每天写代码时间长了，可以换一个风格，当然也可以自己去看别人的源码，自己DIY一个，如果这篇博客被更多人的看见，我可以再出一个DIY的案例</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Nov 27 2019 16:07:37 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;strong&gt;我是做前端开发的，可能在视觉方面喜欢折腾，所以我总是在网上找好看的主题，但是自己又不想去完完整整的开发一个视觉主题，所以就决定总
      
    
    </summary>
    
      <category term="VSCode" scheme="http://bilent.top/categories/VSCode/"/>
    
    
      <category term="VSCode" scheme="http://bilent.top/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>关于Vue全局使用socket.io的详细解释</title>
    <link href="http://bilent.top/posts/3197c66b.html"/>
    <id>http://bilent.top/posts/3197c66b.html</id>
    <published>2019-09-20T16:31:00.000Z</published>
    <updated>2019-11-27T02:18:45.574Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Nov 27 2019 16:07:37 GMT+0800 (GMT+08:00) --><h1 id="关于Vue全局使用socket-io的详细解释"><a href="#关于Vue全局使用socket-io的详细解释" class="headerlink" title="关于Vue全局使用socket.io的详细解释"></a>关于Vue全局使用socket.io的详细解释</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;了解使用<code>socket.io</code>之前我们需要了解<code>WebSocket</code>，这个东西可能对刚接触的人来说，看的越多越懵，其实对比了解他们的区别，就知道了<code>WebSocket</code>。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实说到<strong>套接字</strong>，我们可以从以下几个关键词说起：</p><ol><li>TCP/UDP协议</li><li>网络通信的条件</li></ol><p>说到这些东西，计算机专业的都不会陌生，说白了websocket就是基于TCP协议进行传输数据的<strong>单元</strong>，这是面向连接的可靠的流式套接字。而基于UDP协议的套接字是面向不可靠的数据报套接字。而我们这次说的也是基于TCP的套接字连接。</p><p>网络通信的条件：</p><ol><li>连接使用的协议</li><li>本机IP</li><li>本地进程协议端口</li><li>远地主机IP</li><li>远地进程协议端口</li></ol><p>WebSocket协议在2008年诞生，2011年成为国际标准。现在所有浏览器都已经支持了。</p><p>WebSocket也是HTML 5规范的组成部分之一，现标准版本为 RFC 6455。WebSocket 相较于上述几种连接方式，实现原理较为复杂，用一句话概括就是：客户端向 WebSocket 服务器通知（notify）一个带有所有 接收者ID（recipients IDs） 的事件（event），服务器接收后立即通知所有活跃的（active）客户端，只有ID在接收者ID序列中的客户端才会处理这个事件。由于 WebSocket 本身是基于TCP协议的，所以在服务器端我们可以采用构建 TCP Socket 服务器的方式来构建 WebSocket 服务器。</p><p>这个 WebSocket 是一种全新的协议。它将 TCP 的 Socket（套接字）应用在了web page上，从而使通信双方建立起一个保持在活动状态连接通道，并且属于全双工（双方同时进行双向通信）。</p><p>其实是这样的，WebSocket 协议是借用 HTTP协议 的 101 switch protocol 来达到协议转换的，从HTTP协议切换成WebSocket通信协议。</p><p>它的最大特点就是，服务器可以主动向客户端推送信息，客户端也可以主动向服务器发送信息，是真正的双向平等对话，属于服务器推送技术的一种。</p><p>也有人把他说成是双向Ajax，网页上的IM以及同步游戏都可以使用这个WebSocket实现。</p><p>这里我们可以看出，使用网页上的WebSocket的通信，其实就是一种“<strong>HttpRequest</strong>”请求，但又有所不同，我们需要准备连接的IP以及端口号，而本地的端口号，再发送HTTP请求的时候，而这些浏览器已经帮你完成了。那么我们其实还要注意一点，当我们发送websocket请求连接的时候，浏览器是怎么知道我们这次到底是http请求，还是WebSocket。<br><img src="http://qiniu.bilent.top/websocket-upgrade-2019919.png" alt="websocket-upgrade-2019919"></p><p>这里我们就能看见，发送WebSocket连接的时候我们会在<code>Request Header</code>中的<code>connection</code>字段，将其设置为upgrade,意思就是将其升级为WebSocket，我们也可以看到在response相应头部中已经有<code>upgrade：webscoket</code>字段，正常的HTTP请求是看不到的。这个时候就说明我们已经在使用WebSocket进行通信了。</p><p>简单的了解他的一些特点、工作机制，知道了连接的过程，我们还需要了解其相关的API。</p><p>这个东西的核心功能也就是那么几个，我们可以从发送接受一个消息的实例来举例说明：</p><ol><li>发送消息之前，需要连接 —connect</li><li>连接成功，我们可能需要监听服务器发过来的消息 —onMesssage</li><li>连接成功，我们也可以发送消息 —send</li><li>连接过程中，我们发生消息出现错误 —onError</li><li>完成通信后，关闭连接 —onClose</li></ol><p>其实，主要就是这几个方法，具体指的是什么方法，这里可以参照链接<br><code>WebSocket API</code>，如果感觉了解的不够，可以看一下</p><blockquote><p>WebSocket官方文档翻译——HTML5 Web Sockets:A Quantum Leap in Scalability for the Web</p></blockquote><hr><p>到这里其实我们算把WebSocket基本上说了一遍，但是我们对基于WebSocket封装的socket.io 还是只字未提，我们可以通过对比WebSocket来了解他：</p><p>相同点</p><ol><li><p>都需要建立TCP连接</p></li><li><p>都是属于七层协议中的应用层协议</p></li></ol><h2 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h2><p>传统通过HTTP请求模拟双向数据传递的方式是http+Polling(轮询)和http+Long Polling(长轮询)。轮询(Polling)就是客户端定时发送get请求向服务端请求数据，这种方式能满足一定的需求，但是存在一些问题，<strong>如果服务端没有新数据，但是客户端get请求到的数据都是旧数据，这样不仅浪费了带宽资源，而且占用CPU内存</strong>。</p><p>LongPolling(长轮询)就是在Polling上的一些改进，即如果服务端没有新数据返回给客户端，服务端会把当前的这个get请求保持住(hold)，当有新数据时则返回新数据，如果超过一定时间服务端仍没有新数据，则服务端返回超时请求，客户端接收到超时请求，然后在发送get请求，一直循环执行。</p><p>虽然一定程度解决了带宽资源和CPU内存浪费情况，但是当服务端数据更新很快，这和轮询（Polling）没有本质上的区别，而且http数据包的头部数据量往往很大（通常有400多个字节），但是真正被服务器需要的数据却很少（有时只有10个字节左右），这样的数据包在网络上周期性的传输，难免对网络带宽是一种浪费。在高并发的情况下，这对服务器是一个很大的挑战。</p><p>综合上面轮询的种种问题，Websocket终于华丽的登上了舞台。</p><h2 id="socket-io"><a href="#socket-io" class="headerlink" title="socket.io"></a>socket.io</h2><p>Socket.io是一个WebSocket库，包括了客户端的js和服务器端的nodejs，它的目标是构建可以在不同浏览器和移动设备上使用的实时应用。也就是说，Websocket仅仅是 Socket.io实现实时通信的一个子集。因此Websocket客户端连接不上Socket.io服务端，当然Socket.io客户端也连接不上Websocket服务端。</p><p>它会自动根据浏览器从WebSocket、AJAX长轮询、Iframe流等等各种方式中选择最佳的方式来实现网络实时应用，非常方便和人性化，而且支持的浏览器最低达IE5.5</p><p><strong>socket.io特点</strong></p><ul><li>实时分析：将数据推送到客户端，这些客户端会被表示为实时计数器，图表或日志客户。</li><li>实时通信和聊天：只需几行代码便可写成一个Socket.IO的”Hello,World”聊天应用。</li><li>二进制流传输：从1.0版本开始，Socket.IO支持任何形式的二进制文件传输，例如：图片，视频，音频等。</li><li>文档合并：允许多个用户同时编辑一个文档，并且能够看到每个用户做出的修改。</li></ul><h2 id="Vue-全局使用socket-io"><a href="#Vue-全局使用socket-io" class="headerlink" title="Vue 全局使用socket.io"></a>Vue 全局使用socket.io</h2><h3 id="安装引入"><a href="#安装引入" class="headerlink" title="安装引入"></a>安装引入</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i vue-socket.io -S</span><br><span class="line">npm i socket.io-client -S</span><br></pre></td></tr></table></figure><h3 id="全局引入"><a href="#全局引入" class="headerlink" title="全局引入"></a>全局引入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import VueSocketio from &apos;vue-socket.io&apos;;</span><br><span class="line">import io from &apos;socket.io-client&apos;;</span><br><span class="line">Vue.use(new VueSocketIO(&#123;</span><br><span class="line">  debug: true,</span><br><span class="line">  connection: &apos;ws地址:端口号&apos;,</span><br><span class="line">  // connection: io(ws地址:端口号)</span><br><span class="line">  // 这两种连接方式都没有问题</span><br><span class="line">  vuex: &#123;   // 根据实际需求添加</span><br><span class="line">    store,</span><br><span class="line">    actionPrefix: &apos;SOCKET_&apos;,</span><br><span class="line">    mutationPrefix: &apos;SOCKET_&apos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure><h3 id="发送消息的方法"><a href="#发送消息的方法" class="headerlink" title="发送消息的方法"></a>发送消息的方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$socket.emit(&apos;message&apos;, value) // message字段需要后台定义</span><br></pre></td></tr></table></figure><h3 id="接受消息的方法"><a href="#接受消息的方法" class="headerlink" title="接受消息的方法"></a>接受消息的方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sockets: &#123;</span><br><span class="line">  connect: function() &#123;</span><br><span class="line">    console.log(&apos;socket connected&apos;)</span><br><span class="line">  &#125;,</span><br><span class="line">  message: function(res) &#123;</span><br><span class="line">    // const data = res</span><br><span class="line">    if (res !== &apos;我是服务器都安发送的信息&apos;) &#123;</span><br><span class="line">      // console.log(JSON.parse(res))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">这个需要房子sockets这个字段中，层级与methods,computed同级</span><br></pre></td></tr></table></figure><h3 id="如果使用Vuex来管理websocket数据，定义方法，在组件中使用，将监听接受的数据commit到state中即可"><a href="#如果使用Vuex来管理websocket数据，定义方法，在组件中使用，将监听接受的数据commit到state中即可" class="headerlink" title="如果使用Vuex来管理websocket数据，定义方法，在组件中使用，将监听接受的数据commit到state中即可"></a><strong>如果使用Vuex来管理websocket数据，定义方法，在组件中使用，将监听接受的数据commit到state中即可</strong></h3><p>[<strong>参考资料</strong>]</p><p><a href="https://blog.csdn.net/u013252773/article/details/24228375" target="_blank" rel="noopener">WebSocket官方文档翻译——HTML5 Web Sockets:A Quantum Leap in Scalability for the Web</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket" target="_blank" rel="noopener">WebSocket API</a></p><p><a href="https://www.w3cschool.cn/socket/" target="_blank" rel="noopener">WebSocket W3CSchool 中文文档</a></p><p><a href="https://www.jianshu.com/p/970dcfd174dc" target="_blank" rel="noopener">Websocket和Socket.io的区别及应用</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Nov 27 2019 16:07:37 GMT+0800 (GMT+08:00) --&gt;&lt;h1 id=&quot;关于Vue全局使用socket-io的详细解释&quot;&gt;&lt;a href=&quot;#关于Vue全局使用socket-io的详细解释&quot; class=&quot;
      
    
    </summary>
    
      <category term="WebSocket" scheme="http://bilent.top/categories/WebSocket/"/>
    
    
      <category term="学习整理" scheme="http://bilent.top/tags/%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>近来一些感悟小记录</title>
    <link href="http://bilent.top/posts/bdfe6e8f.html"/>
    <id>http://bilent.top/posts/bdfe6e8f.html</id>
    <published>2019-08-05T14:17:00.000Z</published>
    <updated>2019-09-19T14:51:12.616Z</updated>
    
    <content type="html"><![CDATA[<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
    
      <category term="近来生活" scheme="http://bilent.top/tags/%E8%BF%91%E6%9D%A5%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>CSS垂直居中的几种办法总结</title>
    <link href="http://bilent.top/posts/8f413f34.html"/>
    <id>http://bilent.top/posts/8f413f34.html</id>
    <published>2019-07-28T10:17:00.000Z</published>
    <updated>2019-09-13T02:40:41.167Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Nov 27 2019 16:07:37 GMT+0800 (GMT+08:00) --><p>在css中居中是比较容易实现，行元素在其对应的父元素上设置<code>text-align:center</code>，块元素在其对应的父级元素设置<code>margin:0 auto</code>即可。但是垂直并没有给出的语法，需要自己写，本文用以下几种方法实现垂直居中。</p><h4 id="1-绝对定位和负margin-—-gt-已知元素"><a href="#1-绝对定位和负margin-—-gt-已知元素" class="headerlink" title="1.绝对定位和负margin —&gt;已知元素"></a>1.绝对定位和负margin —&gt;已知元素</h4><p>这种方法需要设置子元素、父级元素的宽高</p><p>适用对象：块级元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-parent</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-child</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">25%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/07/28/5d3d67a46ae6f78808.png" alt="绝对定位和负margin"></p><h4 id="2-绝对定位和margin-—-gt-已知元素"><a href="#2-绝对定位和margin-—-gt-已知元素" class="headerlink" title="2.绝对定位和margin —&gt;已知元素"></a>2.绝对定位和margin —&gt;已知元素</h4><p>这种方法与上面的方法是类似的，在IE7会出现的问题！</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-parent</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-child</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/07/28/5d3d67a46ae6f78808.png" alt="绝对定位和margin"></p><p>设置子元素的宽度，使用<code>margin</code>对块级子元素进行上下左右居中；</p><p>其实在更多的响应式框架中，<code>width</code>都是自适应的，高度可以设置<code>px</code>，这两种方法都是可以继承父元素的宽高不需要再设置的，换句话说就是，父元素的宽高就是继承即可，不能继承空值。</p><h4 id="3-padding的方式-—-gt-不需要知道"><a href="#3-padding的方式-—-gt-不需要知道" class="headerlink" title="3.padding的方式 —&gt;不需要知道"></a>3.padding的方式 —&gt;不需要知道</h4><p>使用padding的方式进行垂直居中；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-parent</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-child</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/07/28/5d3d69a2090f437802.png" alt="padding"></p><h4 id="4-table的方式-—-gt-已知元素"><a href="#4-table的方式-—-gt-已知元素" class="headerlink" title="4.table的方式 —&gt;已知元素"></a>4.table的方式 —&gt;已知元素</h4><p>给父元素设置table，对单元格进行垂直居中；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-child"</span>&gt;</span>我要居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-parent</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-child</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: table-cell;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/07/28/5d3d6bf327a5611440.png" alt="table"></p><p>这种居中方式是通过<code>table</code>设置单元格的方式 <strong>+</strong> <code>vertical-align：middle</code>，当设置<code>table-cell</code>不起作用的时候就是换成<code>dispaly：inline-block</code></p><h4 id="5-line-height设置行高的方式-—-gt-已知元素"><a href="#5-line-height设置行高的方式-—-gt-已知元素" class="headerlink" title="5.line-height设置行高的方式 —&gt;已知元素"></a>5.line-height设置行高的方式 —&gt;已知元素</h4><p>这种方式是专门对于文本内容的，只需要将子元素的行高设置和父元素的一样即可。</p><h4 id="6-float-负margin的方式-—-gt-已知元素"><a href="#6-float-负margin的方式-—-gt-已知元素" class="headerlink" title="6.float+负margin的方式 —&gt;已知元素"></a>6.float+负margin的方式 —&gt;已知元素</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-parent"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"float"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-child"</span>&gt;</span>我要居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-parent</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.float</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: -<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aliceblue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-child</span> &#123;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">3</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: antiquewhite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/07/28/5d3d77babf71957489.png" alt="float"></p><p>这种方式太过复杂，需要不断的计算，以此达到垂直的目的</p><h4 id="7-translate-position的方式-—-gt-未知元素"><a href="#7-translate-position的方式-—-gt-未知元素" class="headerlink" title="7.translate+position的方式 —&gt;未知元素"></a>7.translate+position的方式 —&gt;未知元素</h4><p>这种方式解决未知元素的垂直居中问题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">    background-color: aliceblue;</span><br><span class="line">    width: 500px;</span><br><span class="line">    height: 500px;</span><br><span class="line">    position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.content &#123;</span><br><span class="line">    background-color: #FFFFFF;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 200px;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: 50%;</span><br><span class="line">    top: 50%;</span><br><span class="line">    transform: translate(-50%,-50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/07/28/5d3d723bc438367148.png" alt="translate"></p><h4 id="8-flex的方式"><a href="#8-flex的方式" class="headerlink" title="8.flex的方式"></a>8.flex的方式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: aliceblue;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/07/28/5d3d723bc438367148.png" alt="flex"></p><p>这种方式是比较强大的，是<code>css3</code>所支持的盒子模型，很多新的响应式都是基于盒子模型的。</p><hr><p>这个里面很多的方式及在不同的场景进行应用的，在一个div中里面包含文字的，本来就是很难处理的，因为跟传递过来的字数长度，以及语言都是有关系的，文字的垂直居中就不是很容易处理。但是通常垂直居中加省略号的方式会比较好看一点，最好的方式就是能够用图说话的地方尽量少用文字，尽量多使用<code>img</code>标签而不用定位背景图，这样更利于SEO。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Nov 27 2019 16:07:37 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;在css中居中是比较容易实现，行元素在其对应的父元素上设置&lt;code&gt;text-align:center&lt;/code&gt;，块元素在其对应的父级元素
      
    
    </summary>
    
      <category term="CSS" scheme="http://bilent.top/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://bilent.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>浏览器引入iconfont彩色字体</title>
    <link href="http://bilent.top/posts/75f3f02b.html"/>
    <id>http://bilent.top/posts/75f3f02b.html</id>
    <published>2019-07-24T13:57:00.000Z</published>
    <updated>2019-10-14T14:27:50.218Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Nov 27 2019 16:07:37 GMT+0800 (GMT+08:00) --><p>国内引入字体库基本都是使用<a href="https://www.iconfont.cn/" target="_blank" rel="noopener">阿里的iconfont</a>，现在越来越多的开发场景需要使用到这种图标字体。使用这种图标字体解决了以前引入精灵图的诸多缺点。现在做前端开发，基本上都会使用上各种图标字体。今天要说的是引入iconfont的彩色字体图标。</p><p>基本上大家都知道，当我们使用unicode或者font class的方式引入字体图标的时候，我们需要在自定义的css文件重新设置颜色，但是有时候满足不了相对应的场景。比如这个Vue的图标</p><p><img src="https://i.loli.net/2019/07/24/5d3863f836a1192200.png" alt="eg.1"></p><p>通常的时候我们只能通过图片去引入，但是现在iconfont+，推出了彩色图标的使用方法，摆脱了小图片的烦恼。</p><p><strong>官方给出的做法是</strong></p><p>引入symbol的字体图标js文件，其实打开js文件，就是将字体图标打包成SVG的形式，同时最不同的path填充相应的颜色</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"你的字体图标js文件"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在css中声明icon，例如:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: -<span class="number">0.15em</span>;</span><br><span class="line">    <span class="attribute">fill</span>: currentColor;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">3em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"icon"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">use</span> <span class="attr">xlink:href</span>=<span class="string">"#字体类名"</span>&gt;</span><span class="tag">&lt;/<span class="name">use</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>xlink前面的#号不需要改变，因为js中生成的svg的id就是与此对应。</p><p>本博客的关于我页面中，我的技能就是使用带颜色的字体图标显示的。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Nov 27 2019 16:07:37 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;国内引入字体库基本都是使用&lt;a href=&quot;https://www.iconfont.cn/&quot; target=&quot;_blank&quot; rel=&quot;noo
      
    
    </summary>
    
      <category term="icon" scheme="http://bilent.top/categories/icon/"/>
    
    
      <category term="icon" scheme="http://bilent.top/tags/icon/"/>
    
  </entry>
  
</feed>
